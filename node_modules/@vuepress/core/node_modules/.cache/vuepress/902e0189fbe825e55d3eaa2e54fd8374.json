{"remainingRequest":"/Users/onlyone/open-github/technology-talk/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/onlyone/open-github/technology-talk/docs/.vuepress/components/RoadMap.vue?vue&type=template&id=78f0221d&","dependencies":[{"path":"/Users/onlyone/open-github/technology-talk/docs/.vuepress/components/RoadMap.vue","mtime":1676857798581},{"path":"/Users/onlyone/open-github/technology-talk/node_modules/cache-loader/dist/cjs.js","mtime":1676962415098},{"path":"/Users/onlyone/open-github/technology-talk/node_modules/babel-loader/lib/index.js","mtime":1676962415297},{"path":"/Users/onlyone/open-github/technology-talk/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1676962415828},{"path":"/Users/onlyone/open-github/technology-talk/node_modules/cache-loader/dist/cjs.js","mtime":1676962415098},{"path":"/Users/onlyone/open-github/technology-talk/node_modules/vue-loader/lib/index.js","mtime":1676962415466}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9InJvYWQtbWFwIiBzdHlsZT0id2lkdGg6MTA3MHB4OyBoZWlnaHQ6MjIwMHB4OyBtYXJnaW46MCBhdXRvOyI+CiAgICA8IS0tIOWcsOWbvuW3puS+pyAtLT4KICAgIDxkaXYgY2xhc3M9InJvYWQtbWFwLWxlZnQiIHN0eWxlPSJwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoxNjBweDtoZWlnaHQ6NjAwcHg7Ij4KICAgICAgICA8IS0tIOepuueZveWNoOS9jSAtLT4KICAgICAgICA8ZGl2IGNzcz0icm93IiBzdHlsZT0ianVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7Zm9udC1zaXplOiAxMnB4O2Rpc3BsYXk6IGZsZXg7bWFyZ2luLWxlZnQ6MTBweDsiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iIHN0eWxlPSJ3aWR0aDoxNTBweDsgbWluLWhlaWdodDoxOTBweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm91dGUiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwO2NvbG9yOiNmZmZmZmY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTJweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOi3r+S5piB2MS4xIHwgQOWwj+WCheWTpQogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7Y29sb3I6I2ZmZmZmZjtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxMnB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9idWdzdGFjay5jbi8iIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6I2U1ZTVlNTt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7lrpjnvZHvvJpidWdzdGFjay5jbjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLSAwMeW3pui9rOWNoOS9jSAtLT4KICAgICAgICA8ZGl2IGNzcz0icm93IgogICAgICAgICAgICAgc3R5bGU9Imp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O2ZvbnQtc2l6ZTogMTJweDtkaXNwbGF5OiBmbGV4O21hcmdpbi1sZWZ0Oi0xcHg7bWFyZ2luLXRvcDotNHB4OyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxlZnRfcmlnaHQiIHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7bWFyZ2luLXRvcDotMjBweDttYXJnaW4tbGVmdDoxMjJweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGVmdC1jb3JuZXIiIHN0eWxlPSJtYXJnaW46IDEwMHB4IGF1dG87IGJvcmRlci10b3AtbGVmdC1yYWRpdXM6NjBweDsgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czo2MHB4OyBib3gtc2hhZG93OiAwIDAgMCAzMHB4ICMwMGNjZmYsIDAgMCAwIDYwcHggIzk5ZmZmZjsgd2lkdGg6IDQwcHg7aGVpZ2h0OjEyMHB4OyBjbGlwLXBhdGg6IHBvbHlnb24oLTMwMHB4IDBweCwgMzlweCAtMjIwcHgsIDM5cHggMjIwcHgsIDYwcHggMjIwcHgpOyI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDwhLS0g56m655m95Y2g5L2NIC0tPgogICAgICAgIDxkaXYgY3NzPSJyb3ciIHN0eWxlPSJqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtmb250LXNpemU6IDEycHg7ZGlzcGxheTogZmxleDttYXJnaW4tbGVmdDoxMHB4OyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjEwMHB4OyI+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDwhLS0gMDLlt6bovazljaDkvY0gLS0+CiAgICAgICAgPGRpdiBjc3M9InJvdyIKICAgICAgICAgICAgIHN0eWxlPSJqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtmb250LXNpemU6IDEycHg7ZGlzcGxheTogZmxleDttYXJnaW4tbGVmdDotMXB4O21hcmdpbi10b3A6LTM2cHg7Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGVmdF9yaWdodCIgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTttYXJnaW4tdG9wOi00MHB4O21hcmdpbi1sZWZ0OjEyMnB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsZWZ0LWNvcm5lciIgc3R5bGU9Im1hcmdpbjogMTAwcHggYXV0bzsgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czo2MHB4OyBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjYwcHg7IGJveC1zaGFkb3c6IDAgMCAwIDMwcHggIzAwY2NjYywgMCAwIDAgNjBweCAjMzNmZmNjOyB3aWR0aDogNDBweDtoZWlnaHQ6MTIwcHg7IGNsaXAtcGF0aDogcG9seWdvbigtMzAwcHggMHB4LCAzOXB4IC0yMjBweCwgMzlweCAyMjBweCwgNjBweCAyNjBweCk7Ij48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLSDnqbrnmb3ljaDkvY0gLS0+CiAgICAgICAgPGRpdiBjc3M9InJvdyIgc3R5bGU9Imp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O2ZvbnQtc2l6ZTogMTJweDtkaXNwbGF5OiBmbGV4O21hcmdpbi1sZWZ0OjEwcHg7Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTE2cHg7Ij4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLSAwM+W3pui9rOWNoOS9jSAtLT4KICAgICAgICA8ZGl2IGNzcz0icm93IgogICAgICAgICAgICAgc3R5bGU9Imp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O2ZvbnQtc2l6ZTogMTJweDtkaXNwbGF5OiBmbGV4O21hcmdpbi1sZWZ0Oi0xcHg7bWFyZ2luLXRvcDotMzZweDsiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsZWZ0X3JpZ2h0IiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlO21hcmdpbi10b3A6LTQwcHg7bWFyZ2luLWxlZnQ6MTIycHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxlZnQtY29ybmVyIiBzdHlsZT0ibWFyZ2luOiAxMDBweCBhdXRvOyBib3JkZXItdG9wLWxlZnQtcmFkaXVzOjYwcHg7IGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6NjBweDsgYm94LXNoYWRvdzogMCAwIDAgMzBweCAjMDBjY2NjLCAwIDAgMCA2MHB4ICMzM2ZmY2M7IHdpZHRoOiA0MHB4O2hlaWdodDoxMjBweDsgY2xpcC1wYXRoOiBwb2x5Z29uKC0zMDBweCAwcHgsIDM5cHggLTIyMHB4LCAzOXB4IDIyMHB4LCA2MHB4IDI2MHB4KTsiPjwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8IS0tIOepuueZveWNoOS9jSAtLT4KICAgICAgICA8ZGl2IGNzcz0icm93IiBzdHlsZT0ianVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7Zm9udC1zaXplOiAxMnB4O2Rpc3BsYXk6IGZsZXg7bWFyZ2luLWxlZnQ6MTBweDsiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iIHN0eWxlPSJ3aWR0aDoxNTBweDsgbWluLWhlaWdodDoxMDBweDsiPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8IS0tIDA05bem6L2s5Y2g5L2NIC0tPgogICAgICAgIDxkaXYgY3NzPSJyb3ciCiAgICAgICAgICAgICBzdHlsZT0ianVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7Zm9udC1zaXplOiAxMnB4O2Rpc3BsYXk6IGZsZXg7bWFyZ2luLWxlZnQ6LTFweDttYXJnaW4tdG9wOi0zNnB4OyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxlZnRfcmlnaHQiIHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7bWFyZ2luLXRvcDotNDBweDttYXJnaW4tbGVmdDoxMjJweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGVmdC1jb3JuZXIiIHN0eWxlPSJtYXJnaW46IDEwMHB4IGF1dG87IGJvcmRlci10b3AtbGVmdC1yYWRpdXM6NjBweDsgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czo2MHB4OyBib3gtc2hhZG93OiAwIDAgMCAzMHB4ICNEQTcwRDYsIDAgMCAwIDYwcHggI0ZGQkJGRjsgd2lkdGg6IDQwcHg7aGVpZ2h0OjEwNHB4OyBjbGlwLXBhdGg6IHBvbHlnb24oLTMwMHB4IDBweCwgMzlweCAtMjIwcHgsIDM5cHggMjIwcHgsIDYwcHggMjYwcHgpOyI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDwhLS0g56m655m95Y2g5L2NIC0tPgogICAgICAgIDxkaXYgY3NzPSJyb3ciIHN0eWxlPSJqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtmb250LXNpemU6IDEycHg7ZGlzcGxheTogZmxleDttYXJnaW4tbGVmdDoxMHB4OyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2OHB4OyI+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDwhLS0gMDXlt6bovazljaDkvY0gLS0+CiAgICAgICAgPGRpdiBjc3M9InJvdyIKICAgICAgICAgICAgIHN0eWxlPSJqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtmb250LXNpemU6IDEycHg7ZGlzcGxheTogZmxleDttYXJnaW4tbGVmdDotMXB4O21hcmdpbi10b3A6LTM2cHg7Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGVmdF9yaWdodCIgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTttYXJnaW4tdG9wOi00MHB4O21hcmdpbi1sZWZ0OjEyMnB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsZWZ0LWNvcm5lciIgc3R5bGU9Im1hcmdpbjogMTAwcHggYXV0bzsgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czo2MHB4OyBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjYwcHg7IGJveC1zaGFkb3c6IDAgMCAwIDMwcHggI0ZGRDcwMCwgMCAwIDAgNjBweCAjRkZGNjhGOyB3aWR0aDogNDBweDtoZWlnaHQ6MTA0cHg7IGNsaXAtcGF0aDogcG9seWdvbigtMzAwcHggMHB4LCAzOXB4IC0yMjBweCwgMzlweCAyMjBweCwgNjBweCAyNjBweCk7Ij48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLSDnqbrnmb3ljaDkvY0gLS0+CiAgICAgICAgPGRpdiBjc3M9InJvdyIKICAgICAgICAgICAgIHN0eWxlPSJqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtmb250LXNpemU6IDEycHg7ZGlzcGxheTogZmxleDttYXJnaW4tbGVmdDoxMHB4O21hcmdpbi10b3A6MTA2cHg7Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzY2ZmY5OTtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzMzY2M5OTtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDwhLS0g5Zyw5Zu+5Lit6Ze0IC0tPgogICAgPGRpdiBjbGFzcz0icm9hZC1tYXAtY2VudGVyIiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7d2lkdGg6NzUwcHg7aGVpZ2h0OjYwMHB4O21hcmdpbi1sZWZ0OjE2MHB4OyI+CiAgICAgICAgPGRpdiBjc3M9InJvdyIgc3R5bGU9Imp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtmb250LXNpemU6IDEycHg7ZGlzcGxheTogZmxleDsiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iIHN0eWxlPSJ3aWR0aDoxNTBweDsgbWluLWhlaWdodDoxNjRweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm91dGUiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjZjFjMjMyO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICDln7rnoYAKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjZmZlNTk5O2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICDorqHnrpfmnLrln7rnoYAKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbnMiIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDEt5Z+656GALzAxMS3orqHnrpfmnLrln7rnoYAvMS3orqHnrpfmnLrnvZHnu5wvaW1hZ2VzL+iuoeeul+acuue9kee7nC5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2l0ZW0uamQuY29tLzExMjUzNzEwLmh0bWwiIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPuiuoeeul+acuue9kee7nDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzAxLeWfuuehgC8wMTEt6K6h566X5py65Z+656GALzIt5pON5L2c57O757ufL2ltYWdlcy/mk43kvZzns7vnu58ucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9pdGVtLmpkLmNvbS8xMjAwNjYzNy5odG1sIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7mk43kvZzns7vnu588L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wMS3ln7rnoYAvMDExLeiuoeeul+acuuWfuuehgC8zLee8luivkeWOn+eQhi9pbWFnZXMv57yW6K+R5Y6f55CGLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vaXRlbS5qZC5jb20vMTAwNTg3NzYuaHRtbCIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+57yW6K+R5Y6f55CGPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNmMWMyMzI7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPjwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjZmZlNTk5O2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICDnvJbnqIvln7rnoYAKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbnMiIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDEt5Z+656GALzAxMi3nvJbnqIvln7rnoYAvMS3mlbDmja7nu5PmnoQvaW1hZ2VzL+aVsOaNrue7k+aehC5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2J1Z3N0YWNrLmNuL21kL2FsZ29yaXRobS9kYXRhLXN0cnVjdHVyZXMvZGF0YS1zdHJ1Y3R1cmVzLmh0bWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPuaVsOaNrue7k+aehDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzAxLeWfuuehgC8wMTIt57yW56iL5Z+656GALzIt5pWw5a2m6YC76L6RL2ltYWdlcy/mlbDlrabpgLvovpEucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9idWdzdGFjay5jbi9tZC9hbGdvcml0aG0vbG9naWMvbWF0aC8yMDIyLTEwLTMwLWJpdHMuaHRtbCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+5pWw5a2m6YC76L6RPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDEt5Z+656GALzAxMi3nvJbnqIvln7rnoYAvMy3orr7orqHmqKHlvI8vaW1hZ2VzL+iuvuiuoeaooeW8jy5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2J1Z3N0YWNrLmNuL21kL2RldmVsb3AvZGVzaWduLXBhdHRlcm4vMjAyMC0wNS0yMC0lRTklODclOEQlRTUlQUQlQTZKYXZhJUU4JUFFJUJFJUU4JUFFJUExJUU2JUE4JUExJUU1JUJDJThGJUUzJTgwJThBJUU1JUFFJTlFJUU2JTg4JTk4JUU1JUI3JUE1JUU1JThFJTgyJUU2JTk2JUI5JUU2JUIzJTk1JUU2JUE4JUExJUU1JUJDJThGJUUzJTgwJThCLmh0bWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPuiuvuiuoeaooeW8jzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iIHN0eWxlPSJ3aWR0aDoxNTBweDsgbWluLWhlaWdodDoxNjRweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm91dGUiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjZjFjMjMyO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI2ZmZTU5OTtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg5ZCO56uv6K+t6KiACiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzAxLeWfuuehgC8wMTMt5ZCO56uv6K+t6KiALzEtQ+ivreiogC9pbWFnZXMvY+ivreiogC5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2l0ZW0uamQuY29tLzEyNjI3Nzk1Lmh0bWwiIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkPor63oqIA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wMS3ln7rnoYAvMDEzLeWQjuerr+ivreiogC8yLUphdmEvaW1hZ2VzL2phdmEucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9pdGVtLmpkLmNvbS8xMzEyMjE1NS5odG1sIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5KYXZhPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNmMWMyMzI7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPjwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjZmZlNTk5O2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICDliY3nq6/or63oqIAKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbnMiIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDEt5Z+656GALzAxNC3liY3nq6/or63oqIAvMS1IVE1ML2ltYWdlcy9IVE1MLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnJ1bm9vYi5jb20vaHRtbC9odG1sLXR1dG9yaWFsLmh0bWwiIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkhUTUw8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wMS3ln7rnoYAvMDE0LeWJjeerr+ivreiogC8yLUphdmFTY3JpcHQvaW1hZ2VzL0phdmFTY3JpcHQucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9pdGVtLmpkLmNvbS8xMDQ5MzQyOTQyLmh0bWwiIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkphdmFTY3JpcHQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wMS3ln7rnoYAvMDE0LeWJjeerr+ivreiogC8zLUNTUy9pbWFnZXMvQ1NTLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnJ1bm9vYi5jb20vY3NzL2Nzcy10dXRvcmlhbC5odG1sIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5DU1M8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wMS3ln7rnoYAvMDE0LeWJjeerr+ivreiogC80LVZVRS9pbWFnZXMvVlVFLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vaXRlbS5qZC5jb20vMTM2MTE5MjIuaHRtbCIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+VlVFPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDEt5Z+656GALzAxNC3liY3nq6/or63oqIAvNS1SRUFDVC9pbWFnZXMvUkVBQ1QucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9yZWFjdC5kb2NzY2hpbmEub3JnLyIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+UkVBQ1Q8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0ZGN0YwMDtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg6K6+6K6hCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0ZGQTA3QTtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAgUFBUCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzAyLeiuvuiuoS8wMjEtUFBULzEt5p625p6E5Zu+L2ltYWdlcy/mnrbmnoTlm74ucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS9lbi13dy9taWNyb3NvZnQtMzY1L3Bvd2VycG9pbnQiIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPuaetuaehOWbvjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY3NzPSJyb3ciIHN0eWxlPSJqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7Zm9udC1zaXplOiAxMnB4O2Rpc3BsYXk6IGZsZXg7Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzk5ZmZmZjtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzAwY2NmZjtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg5p625p6E5YiG5bGCCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzAzLeaetuaehC8wMzIt5p625p6E5YiG5bGCLzEtTVZDL2ltYWdlcy9NVkMucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly96aC5tLndpa2lwZWRpYS5vcmcvemgtaGFucy9NVkMiIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPk1WQzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzAzLeaetuaehC8wMzIt5p625p6E5YiG5bGCLzItREREL2ltYWdlcy9EREQucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRG9tYWluLWRyaXZlbl9kZXNpZ24iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkRERDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iIHN0eWxlPSJ3aWR0aDoxNTBweDsgbWluLWhlaWdodDoxNjRweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm91dGUiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjOTlmZmZmO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICDmnrbmnoQKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjMDBjY2ZmO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICDmnrbmnoTmqKHlvI8KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbnMiIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDMt5p625p6ELzAzMS3mnrbmnoTmqKHlvI8vMS3ljZXkvZPlupTnlKgvaW1hZ2VzL+WNleS9k+W6lOeUqC5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3poLndpa2lwZWRpYS5vcmcvemgtaGFucy8lRTUlOTYlQUUlRTklQUIlOTQlRTUlQkMlOEYlRTYlODclODklRTclOTQlQTglRTclQTglOEIlRTUlQkMlOEYiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPuWNleS9k+W6lOeUqDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzAzLeaetuaehC8wMzEt5p625p6E5qih5byPLzIt5b6u5pyN5YqhL2ltYWdlcy/lvq7mnI3liqEucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU1JUJFJUFFJUU2JTlDJThEJUU1JThCJTk5IiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7lvq7mnI3liqE8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wMy3mnrbmnoQvMDMxLeaetuaehOaooeW8jy8zLVNPQS9pbWFnZXMvU09BLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vemgud2lraXBlZGlhLm9yZy93aWtpLyVFOSU5RCVBMiVFNSU5MCU5MSVFNiU5QyU4RCVFNSU4QSVBMSVFNyU5QSU4NCVFNCVCRCU5MyVFNyVCMyVCQiVFNyVCQiU5MyVFNiU5RSU4NCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+U09BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGRkEwN0E7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGRjdGMDA7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIFBvd2VyIERlc2lnbmVyCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzAyLeiuvuiuoS8wMjQtUG93ZXJEZXNpZ25lci8xLeaVsOaNruW6k+W7uuaooS9pbWFnZXMv5pWw5o2u5bqT5bu65qihLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnNhcC5jb20vcHJvZHVjdHMvdGVjaG5vbG9neS1wbGF0Zm9ybS9wb3dlcmRlc2lnbmVyLWRhdGEtbW9kZWxpbmctdG9vbHMuaHRtbCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+5pWw5o2u5bqT5bu65qihPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGRkEwN0E7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPjwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjRkY3RjAwO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICB4bWluZAogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wMi3orr7orqEvMDIzLVhtaW5kLzEt5oCd57u05a+85Zu+L2ltYWdlcy/mgJ3nu7Tlr7zlm74ucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly94bWluZC5jbi8iIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPuaAnee7tOWvvOWbvjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iIHN0eWxlPSJ3aWR0aDoxNTBweDsgbWluLWhlaWdodDoxNjRweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm91dGUiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjRkZBMDdBO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0ZGN0YwMDtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAgZHJhdy5pbwogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wMi3orr7orqEvMDIyLWRyYXcvMS3nsbvlm74vaW1hZ2VzL+exu+Wbvi5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vamdyYXBoL2RyYXdpby1kZXNrdG9wL3JlbGVhc2VzIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7nsbvlm748L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wMi3orr7orqEvMDIyLWRyYXcvMi3mtYHnqIvlm74vaW1hZ2VzL+a1geeoi+Wbvi5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vamdyYXBoL2RyYXdpby1kZXNrdG9wL3JlbGVhc2VzIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7mtYHnqIvlm748L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wMi3orr7orqEvMDIyLWRyYXcvMy3ml7bluo/lm74vaW1hZ2VzL+aXtuW6j+Wbvi5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vamdyYXBoL2RyYXdpby1kZXNrdG9wL3JlbGVhc2VzIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7ml7bluo/lm748L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wMi3orr7orqEvMDIyLWRyYXcvNC3mi5PmiZHlm74vaW1hZ2VzL+aLk+aJkeWbvi5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vamdyYXBoL2RyYXdpby1kZXNrdG9wL3JlbGVhc2VzIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7mi5PmiZHlm748L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNzcz0icm93IiBzdHlsZT0ianVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O2ZvbnQtc2l6ZTogMTJweDtkaXNwbGF5OiBmbGV4OyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMwMGNjZmY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICM5OWZmZmY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOiuvuiuoeWSjOW8gOWPkeWOn+WImQogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wMy3mnrbmnoQvMDMzLeiuvuiuoeWSjOW8gOWPkeWOn+WImS8xLemihuWfn+mpseWKqOiuvuiuoS9pbWFnZXMv6aKG5Z+f6amx5Yqo6K6+6K6hLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vYm9vay5kb3ViYW4uY29tL3N1YmplY3QvMjY4MTk2NjYvIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7poobln5/pqbHliqjorr7orqE8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wMy3mnrbmnoQvMDMzLeiuvuiuoeWSjOW8gOWPkeWOn+WImS8yLea1i+ivlempseWKqOW8gOWPkS9pbWFnZXMv5rWL6K+V6amx5Yqo5byA5Y+RLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vYm9vay5kb3ViYW4uY29tL3N1YmplY3QvMjIwODU5Ny8iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPua1i+ivlempseWKqOW8gOWPkTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iIHN0eWxlPSJ3aWR0aDoxNTBweDsgbWluLWhlaWdodDoxNjRweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm91dGUiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjMDBjYzk5O2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICDnjq/looMKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjOTlmZjk5O2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICDku6PnoIHmiZjnrqEKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbnMiIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDQt546v5aKDLzA0MS3ku6PnoIHmiZjnrqEvMS1HaXRodWIvaW1hZ2VzL0dpdGh1Yi5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5HaXRodWI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNC3njq/looMvMDQxLeS7o+eggeaJmOeuoS8yLUdpdGNvZGUvaW1hZ2VzL0dpdGNvZGUucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRjb2RlLm5ldC8iIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkdpdGNvZGU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNC3njq/looMvMDQxLeS7o+eggeaJmOeuoS8zLUdpdGVlL2ltYWdlcy9HaXRlZS5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGVlLmNvbS8iIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkdpdGVlPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMwMGNjOTk7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICM5OWZmOTk7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOeJiOacrOaOp+WItgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNC3njq/looMvMDQxLeeJiOacrOaOp+WIti8xLUdpdC9pbWFnZXMvR2l0LnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0LXNjbS5jb20vYm9vay96aC92Mi8iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkdpdDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA0LeeOr+Wigy8wNDEt54mI5pys5o6n5Yi2LzItU1ZOL2ltYWdlcy9TVk4ucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90b3J0b2lzZXN2bi5uZXQvZG9jcy9yZWxlYXNlL1RvcnRvaXNlU1ZOX2VuL2luZGV4Lmh0bWwiIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlNWTjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iIHN0eWxlPSJ3aWR0aDoxNTBweDsgbWluLWhlaWdodDoxNjRweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm91dGUiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjMDBjYzk5O2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjOTlmZjk5O2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICDlvIDlj5Hlt6XlhbcKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbnMiIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDQt546v5aKDLzA0Mi3lvIDlj5Hlt6XlhbcvMS1JbnRlbGxpSiBJREVBL2ltYWdlcy9JREVBLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmpldGJyYWlucy5jb20vemgtY24vaWRlYS8iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkludGVsbGlKIElERUE8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNC3njq/looMvMDQyLeW8gOWPkeW3peWFty8yLUpldEJyYWlucyBGbGVldC9pbWFnZXMvRmxlZXQucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9mbGVldC8iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkpldEJyYWlucyBGbGVldDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA0LeeOr+Wigy8wNDIt5byA5Y+R5bel5YW3LzMtTmF2aWNhdC9pbWFnZXMvTmF2aWNhdC5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5uYXZpY2F0LmNvbS5jbi8iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPk5hdmljYXQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzAwY2M5OTtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzk5ZmY5OTtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg5L6d6LWW566h55CGCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA0LeeOr+Wigy8wNDMt5L6d6LWW566h55CGLzEtTWF2ZW4vaW1hZ2VzL01hdmVuLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vbWF2ZW4uYXBhY2hlLm9yZy9kb3dubG9hZC5jZ2kiIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPk1hdmVuPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDQt546v5aKDLzA0My3kvp3otZbnrqHnkIYvMi1HcmFkbGUvaW1hZ2VzL0dyYWRsZS5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dyYWRsZS5vcmcvIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5HcmFkbGU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNzcz0icm93IiBzdHlsZT0ianVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O2ZvbnQtc2l6ZTogMTJweDtkaXNwbGF5OiBmbGV4OyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMzM2ZmY2M7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMwMGNjY2M7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOS7u+WKoeiwg+W6pgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNS3lvIDlj5EvMDU0LeS7u+WKoeiwg+W6pi8xLXh4bC1qb2IvaW1hZ2VzL3h4bC1qb2IucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cueHV4dWVsaS5jb20veHhsLWpvYi8iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPnh4bC1Kb2I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNS3lvIDlj5EvMDU0LeS7u+WKoeiwg+W6pi8yLWVsYXN0aWMtam9iL2ltYWdlcy9lbGFzdGljLWpvYi5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3NoYXJkaW5nc3BoZXJlLmFwYWNoZS5vcmcvZWxhc3RpY2pvYi9jdXJyZW50L2NuL292ZXJ2aWV3LyIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+ZWxhc3RpYy1qb2I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNS3lvIDlj5EvMDU0LeS7u+WKoeiwg+W6pi8zLXF1YXJ0ei9pbWFnZXMvcXVhcnR6LnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cucXVhcnR6LXNjaGVkdWxlci5vcmcvIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5xdWFydHo8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzMzZmZjYztoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzAwY2NjYztoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAgTVEKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbnMiIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDUt5byA5Y+RLzA1My1NUS8xLUthZmthL2ltYWdlcy9LYWZrYS5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2thZmthLmFwYWNoZS5vcmcvIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5LYWZrYTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA1LeW8gOWPkS8wNTMtTVEvMi1SYWJiaXRNUS9pbWFnZXMvUmFiYml0TVEucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cucmFiYml0bXEuY29tLyIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+UmFiYml0TVE8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNS3lvIDlj5EvMDUzLU1RLzMtUm9ja2V0TVEvaW1hZ2VzL1JvY2tldE1RLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcm9ja2V0bXEuYXBhY2hlLm9yZy8iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlJvY2tldE1RPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDUt5byA5Y+RLzA1My1NUS80LUFjdGl2ZU1RL2ltYWdlcy9BY3RpdmVNUS5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2FjdGl2ZW1xLmFwYWNoZS5vcmcvIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5BY3RpdmVNUTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iIHN0eWxlPSJ3aWR0aDoxNTBweDsgbWluLWhlaWdodDoxNjRweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm91dGUiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjMzNmZmNjO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjMDBjY2NjO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICBSUEMKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbnMiIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDUt5byA5Y+RLzA1Mi1SUEMvMS1EdWJiby9pbWFnZXMvRHViYm8ucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kdWJiby5hcGFjaGUub3JnL3poLyIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+RHViYm88L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNS3lvIDlj5EvMDUyLVJQQy8yLUdSUEMvaW1hZ2VzL0dSUEMucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9ncnBjLmlvLyIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+R1JQQzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iIHN0eWxlPSJ3aWR0aDoxNTBweDsgbWluLWhlaWdodDoxNjRweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm91dGUiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjMzNmZmNjO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICDlvIDlj5EKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjMDBjY2NjO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICDmoYbmnrYKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbnMiIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDUt5byA5Y+RLzA1MS3moYbmnrYvMS1TcHJpbmcvaW1hZ2VzL1NwcmluZy5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3NwcmluZy5pby8iIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlNwcmluZzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA1LeW8gOWPkS8wNTEt5qGG5p62LzItU3ByaW5nQm9vdC9pbWFnZXMvU3ByaW5nQm9vdC5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3NwcmluZy5pby9wcm9qZWN0cy9zcHJpbmctYm9vdCIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+U3ByaW5nQm9vdDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA1LeW8gOWPkS8wNTEt5qGG5p62LzMtTXlCYXRpcy9pbWFnZXMvTXlCYXRpcy5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL215YmF0aXMub3JnL215YmF0aXMtMy96aC9pbmRleC5odG1sIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5NeUJhdGlzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICM5OWZmOTk7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMwMGNjOTk7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOiEmuaJi+aetgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNC3njq/looMvMDQ0LeiEmuaJi+aeti8xLVNwcmluZyBpbml0aWFsaXpyL2ltYWdlcy9Jbml0aWFsaXpyLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vc3RhcnQuc3ByaW5nLmlvLyIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+U3ByaW5nIGluaXRpYWxpenI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNC3njq/looMvMDQ0LeiEmuaJi+aeti8yLUFsaXl1biBKYXZhIGluaXRpYWxpenIvaW1hZ2VzL0luaXRpYWxpenIucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9zdGFydC5hbGl5dW4uY29tL2Jvb3RzdHJhcC5odG1sIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5BbGl5dW4gSmF2YSBpbml0aWFsaXpyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDQt546v5aKDLzA0NC3ohJrmiYvmnrYvMy1JREVBIFBsdWdpbiBQcm9qZWN0L2ltYWdlcy9Jbml0aWFsaXpyLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9mdXpoZW5nd2VpL2d1aWRlLWlkZWEtcGx1Z2luLXNjYWZmb2xkaW5nIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5JREVBIFBsdWdpbjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY3NzPSJyb3ciIHN0eWxlPSJqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7Zm9udC1zaXplOiAxMnB4O2Rpc3BsYXk6IGZsZXg7Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzAwY2NjYztoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzMzZmZjYztoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg5rOo5YaM5Lit5b+DCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA1LeW8gOWPkS8wNTUt5rOo5YaM5Lit5b+DLzEtWm9vS2VlcGVyL2ltYWdlcy9ab29rZWVwZXIucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly96b29rZWVwZXIuYXBhY2hlLm9yZy8iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlpvb0tlZXBlcjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA1LeW8gOWPkS8wNTUt5rOo5YaM5Lit5b+DLzItRXVyZWthL2ltYWdlcy9FdXJla2EucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL05ldGZsaXgvZXVyZWthIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5FdXJla2E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNS3lvIDlj5EvMDU1LeazqOWGjOS4reW/gy8zLU5hY29zL2ltYWdlcy9OYWNvcy5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL25hY29zLmlvL3poLWNuL2RvY3Mvd2hhdC1pcy1uYWNvcy5odG1sIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5OYWNvczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iIHN0eWxlPSJ3aWR0aDoxNTBweDsgbWluLWhlaWdodDoxNjRweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm91dGUiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjMDBjY2NjO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjMzNmZmNjO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICDmlbDmja7mupAKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbnMiIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDUt5byA5Y+RLzA1Ni3mlbDmja7mupAvMS1EQkNQL2ltYWdlcy9EQkNQLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vY29tbW9ucy5hcGFjaGUub3JnL3Byb3Blci9jb21tb25zLWRiY3AvIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5EQkNQPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDUt5byA5Y+RLzA1Ni3mlbDmja7mupAvMi1DM1AwL2ltYWdlcy9DM1AwLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm1jaGFuZ2UuY29tL3Byb2plY3RzL2MzcDAvIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5DM1AwPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDUt5byA5Y+RLzA1Ni3mlbDmja7mupAvMy1EcnVpZC9pbWFnZXMvRHJ1aWQucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvZHJ1aWQiIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkRydWlkPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMwMGNjY2M7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMzM2ZmY2M7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOWIhuW6k+WIhuihqAogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNS3lvIDlj5EvMDU3LeWIhuW6k+WIhuihqC8xLU15Q2F0L2ltYWdlcy9NeUNhdC5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lm15Y2F0Lm9yZy5jbi8iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPk15Q2F0PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDUt5byA5Y+RLzA1Ny3liIblupPliIbooagvMi1TaGFyZGluZy1KZGJjL2ltYWdlcy9TaGFyZGluZy1KZGJjLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vc2hhcmRpbmdzcGhlcmUuYXBhY2hlLm9yZy8iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlNoYXJkaW5nLUpkYmM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzAwY2NjYztoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzMzZmZjYztoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg572R5YWzCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA1LeW8gOWPkS8wNTgt572R5YWzLzEtU3ByaW5nIENsb3VkIEdhdGV3YXkvaW1hZ2VzL1NwcmluZy5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3NwcmluZy5pby9wcm9qZWN0cy9zcHJpbmctY2xvdWQtZ2F0ZXdheSIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+U3ByaW5nIENsb3VkIEdhdGV3YXk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNS3lvIDlj5EvMDU4Lee9keWFsy8yLVNvdWwvaW1hZ2VzL1NvdWwucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+U291bDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA1LeW8gOWPkS8wNTgt572R5YWzLzMtWnV1bC9pbWFnZXMvWnV1bC5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vTmV0ZmxpeC96dXVsIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5adXVsPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDUt5byA5Y+RLzA1OC3nvZHlhbMvNC1PcGVuUmVzdHkvaW1hZ2VzL09wZW5SZXN0eS5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL29wZW5yZXN0eS5vcmcvY24vIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5PcGVuUmVzdHk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzAwY2NjYztoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzMzZmZjYztoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg5YWz57O75Z6L5pWw5o2u5bqTCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA1LeW8gOWPkS8wNTkt5YWz57O75Z6L5pWw5o2u5bqTLzEtTXlTcWwvaW1hZ2VzL015U3FsLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm15c3FsLmNvbS9jbi8iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPk15U3FsPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDUt5byA5Y+RLzA1OS3lhbPns7vlnovmlbDmja7lupMvMi1PcmFjbGUvaW1hZ2VzL09yYWNsZS5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5vcmFjbGUuY29tL2hrLyIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+T3JhY2xlPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDUt5byA5Y+RLzA1OS3lhbPns7vlnovmlbDmja7lupMvMy1UaURCL2ltYWdlcy9USURCLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZG9jcy5waW5nY2FwLmNvbS96aC90aWRiL3N0YWJsZSIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+VGlEQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY3NzPSJyb3ciIHN0eWxlPSJqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7Zm9udC1zaXplOiAxMnB4O2Rpc3BsYXk6IGZsZXg7Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzMzZmZjYztoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzAwY2NjYztoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg5aSn5pWw5o2uCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA1LeW8gOWPkS8wNTE0LeWkp+aVsOaNri8xLUZsaW5rL2ltYWdlcy9GbGluay5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2ZsaW5rLmFwYWNoZS5vcmcvIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5GbGluazwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA1LeW8gOWPkS8wNTE0LeWkp+aVsOaNri8yLVN0b3JtL2ltYWdlcy9TdG9ybS5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3N0b3JtLmFwYWNoZS5vcmcvIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5TdG9ybTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA1LeW8gOWPkS8wNTE0LeWkp+aVsOaNri8zLVNwYXJrL2ltYWdlcy9TcGFyay5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3NwYXJrLmFwYWNoZS5vcmcvIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5TcGFyazwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA1LeW8gOWPkS8wNTE0LeWkp+aVsOaNri80LUhpdmUvaW1hZ2VzL0hpdmUucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9oaXZlLmFwYWNoZS5vcmcvIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5IaXZlPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMzM2ZmY2M7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMwMGNjY2M7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIE5vU1FMIOaVsOaNruW6kwogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNS3lvIDlj5EvMDUxMC1Ob1NRTOaVsOaNruW6ky8xLVJlZGlzL2ltYWdlcy9SZWRpcy5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3JlZGlzLmlvLyIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+UmVkaXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNS3lvIDlj5EvMDUxMC1Ob1NRTOaVsOaNruW6ky8yLU1lbWNhY2hlZC9pbWFnZXMvTWVtY2FjaGVkLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vbWVtY2FjaGVkLm9yZy8iIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPk1lbWNhY2hlZDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iIHN0eWxlPSJ3aWR0aDoxNTBweDsgbWluLWhlaWdodDoxNjRweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm91dGUiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjMzNmZmNjO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjMDBjY2NjO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICDlm77lvaLmlbDmja7lupMKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbnMiIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDUt5byA5Y+RLzA1MTEt5Zu+5b2i5pWw5o2u5bqTLzEtTmVvNGovaW1hZ2VzL05lbzRqLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vbmVvNGouY29tLyIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+TmVvNGo8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzMzZmZjYztoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzAwY2NjYztoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg5paH5Lu25a2Y5YKoCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA1LeW8gOWPkS8wNTEyLeaWh+S7tuWtmOWCqC8xLUhiYXNlL2ltYWdlcy9IYmFzZS5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2hiYXNlLmFwYWNoZS5vcmcvIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5IYmFzZTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA1LeW8gOWPkS8wNTEyLeaWh+S7tuWtmOWCqC8yLUhhZG9vcC9pbWFnZXMvSGFkb29wLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkhhZG9vcDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA1LeW8gOWPkS8wNTEyLeaWh+S7tuWtmOWCqC8zLU1vbmdvREIvaW1hZ2VzL01vbmdvREIucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cubW9uZ29kYi5jb20vIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Nb25nb0RCPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMzM2ZmY2M7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMwMGNjY2M7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOaQnOe0ouW8leaTjgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNS3lvIDlj5EvMDUxMy3mkJzntKLlvJXmk44vMS1FbGFzdGljU2VhcmNoL2ltYWdlcy9FbGFzdGljc2VhcmNoLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmVsYXN0aWMuY28vY24vIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5FbGFzdGljU2VhcmNoPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDUt5byA5Y+RLzA1MTMt5pCc57Si5byV5pOOLzItU29sci9pbWFnZXMvU29sci5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3NvbHIuYXBhY2hlLm9yZy8iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlNvbHI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNzcz0icm93IiBzdHlsZT0ianVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O2ZvbnQtc2l6ZTogMTJweDtkaXNwbGF5OiBmbGV4OyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMwMGNjY2M7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMzM2ZmY2M7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOaVsOaNruWQjOatpQogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNS3lvIDlj5EvMDUxNS3mlbDmja7lkIzmraUvMS1PdHRlci9PdHRlci5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vYWxpYmFiYS9vdHRlciIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+T3R0ZXI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNS3lvIDlj5EvMDUxNS3mlbDmja7lkIzmraUvMi1DYW5hbC9DYW5hbC5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vYWxpYmFiYS9jYW5hbCIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+Q2FuYWw8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0RBNzBENjtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg57G75bqTCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0ZGQkJGRjtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg5bqP5YiX5YyWCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA2Leexu+W6ky8wNjEt5bqP5YiX5YyWLzEtZmFzdGpzb24vaW1hZ2VzL2Zhc3Rqc29uLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9hbGliYWJhL2Zhc3Rqc29uIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5mYXN0anNvbjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA2Leexu+W6ky8wNjEt5bqP5YiX5YyWLzItamFja3Nvbi9pbWFnZXMvamFja3Nvbi5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vRmFzdGVyWE1ML2phY2tzb24iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPmphY2tzb248L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNi3nsbvlupMvMDYxLeW6j+WIl+WMli8zLUdzb24vaW1hZ2VzL0dzb24ucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9nc29uIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Hc29uPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNEQTcwRDY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGRkJCRkY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOiupOivgeaOiOadgwogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNi3nsbvlupMvMDYyLeiupOivgeaOiOadgy8xLXNoaXJvL2ltYWdlcy9zaGlyby5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3NoaXJvLmFwYWNoZS5vcmcvIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5zaGlybzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA2Leexu+W6ky8wNjIt6K6k6K+B5o6I5p2DLzItand0L2ltYWdlcy9qd3QucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9qd3QuaW8vIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5qd3Q8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNi3nsbvlupMvMDYyLeiupOivgeaOiOadgy8zLXNzby9pbWFnZXMvc3NvLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+U1NPPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNEQTcwRDY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGRkJCRkY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOWtl+iKgueggeahhuaetgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNi3nsbvlupMvMDYzLeWtl+iKgueggeahhuaeti8xLUFTTS9pbWFnZXMvQVNNLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vYnVnc3RhY2suY24vbWQvYnl0ZWNvZGUvYXNtLWRvY3VtZW50LzElRTUlQkMlOTUlRTglQTglODAuaHRtbCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+QVNNPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDYt57G75bqTLzA2My3lrZfoioLnoIHmoYbmnrYvMi1KYXZhc3Npc3QvaW1hZ2VzL0phdmFzc2lzdC5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5qYXZhc3Npc3Qub3JnLyIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+SmF2YXNzaXN0PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDYt57G75bqTLzA2My3lrZfoioLnoIHmoYbmnrYvMy1CeXRlLUJ1ZGR5L2ltYWdlcy9CeXRlLUJ1ZGR5LnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vYnl0ZWJ1ZGR5Lm5ldC8jLyIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+Qnl0ZS1CdWRkeTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iIHN0eWxlPSJ3aWR0aDoxNTBweDsgbWluLWhlaWdodDoxNjRweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm91dGUiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjREE3MEQ2O2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjRkZCQkZGO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICDnvZHnu5znvJbnqIsKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbnMiIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDYt57G75bqTLzA2NC3nvZHnu5znvJbnqIsvMS1OZXR0eS9pbWFnZXMvTmV0dHkucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9uZXR0eS5pby8iIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPk5ldHR5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDYt57G75bqTLzA2NC3nvZHnu5znvJbnqIsvMi1NaW5hL2ltYWdlcy9NaW5hLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vbWluYS5hcGFjaGUub3JnLyIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+TWluYTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA2Leexu+W6ky8wNjQt572R57uc57yW56iLLzMtV2ViRmx1eC9pbWFnZXMvV2ViRmx1eC5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RvY3Muc3ByaW5nLmlvL3NwcmluZy1mcmFtZXdvcmsvZG9jcy9jdXJyZW50L3JlZmVyZW5jZS9odG1sL3dlYi1yZWFjdGl2ZS5odG1sIgogICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5XZWJGbHV4PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjc3M9InJvdyIgc3R5bGU9Imp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtmb250LXNpemU6IDEycHg7ZGlzcGxheTogZmxleDsiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iIHN0eWxlPSJ3aWR0aDoxNTBweDsgbWluLWhlaWdodDoxNjRweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm91dGUiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjRkZCQkZGO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjREE3MEQ2O2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICDop4TliJnlvJXmk44KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbnMiIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDYt57G75bqTLzA2OS3op4TliJnlvJXmk44vMS1Ecm9vbHMvaW1hZ2VzL0Ryb29scy5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5kcm9vbHMub3JnLyIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+RHJvb2xzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGRkJCRkY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNEQTcwRDY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIEhUVFDmoYbmnrYKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbnMiIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDYt57G75bqTLzA2OC1IVFRQ5qGG5p62LzEtSHR0cENsaWVudC9pbWFnZXMvSHR0cENsaWVudC5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2hjLmFwYWNoZS5vcmcvaHR0cGNvbXBvbmVudHMtY2xpZW50LTUuMS54LyIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+SHR0cENsaWVudDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA2Leexu+W6ky8wNjgtSFRUUOahhuaeti8yLVJlc3RUZW1wbGF0ZS9pbWFnZXMvUmVzdFRlbXBsYXRlLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZG9jcy5zcHJpbmcuaW8vc3ByaW5nLWZyYW1ld29yay9kb2NzL2N1cnJlbnQvamF2YWRvYy1hcGkvb3JnL3NwcmluZ2ZyYW1ld29yay93ZWIvY2xpZW50L1Jlc3RUZW1wbGF0ZS5odG1sIgogICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5SZXN0VGVtcGxhdGU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0ZGQkJGRjtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0RBNzBENjtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg5pyN5Yqh5rK755CGCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA2Leexu+W6ky8wNjct5pyN5Yqh5rK755CGLzEtSHlzdHJpeC9pbWFnZXMvSHlzdHJpeC5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vTmV0ZmxpeC9IeXN0cml4IiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5IeXN0cml4PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDYt57G75bqTLzA2Ny3mnI3liqHmsrvnkIYvMi1TZW50aW5lbC9pbWFnZXMvU2VudGluZWwucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9zZW50aW5lbGd1YXJkLmlvL3poLWNuLyIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+U2VudGluZWw8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNi3nsbvlupMvMDY3LeacjeWKoeayu+eQhi8zLVJhdGVMaW1pdGVyL2ltYWdlcy9SYXRlTGltaXRlci5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2d1YXZhLmRldi9yZWxlYXNlcy8xOS4wL2FwaS9kb2NzL2luZGV4Lmh0bWw/Y29tL2dvb2dsZS9jb21tb24vdXRpbC9jb25jdXJyZW50L1JhdGVMaW1pdGVyLmh0bWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlJhdGVMaW1pdGVyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGRkJCRkY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNEQTcwRDY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOaXpeW/lwogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNi3nsbvlupMvMDY2LeaXpeW/ly8xLWxvZzRqL2ltYWdlcy9sb2c0ai5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2xvZ2dpbmcuYXBhY2hlLm9yZy9sb2c0ai8yLngvIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5sb2c0ajwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA2Leexu+W6ky8wNjYt5pel5b+XLzItbG9nYmFjay9pbWFnZXMvbG9nYmFjay5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2xvZ2JhY2sucW9zLmNoLyIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+bG9nYmFjazwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA2Leexu+W6ky8wNjYt5pel5b+XLzMtc2xmNGovaW1hZ2VzL3NsZjRqLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnNsZjRqLm9yZy8iIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPnNsZjRqPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGRkJCRkY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNEQTcwRDY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOW3peS9nOa1gQogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNi3nsbvlupMvMDY1LeW3peS9nOa1gS8xLUJQTU4vaW1hZ2VzL0JQTU4ucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuYnBtbi5vcmcvIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5CUE1OPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDYt57G75bqTLzA2NS3lt6XkvZzmtYEvMi1BY3Rpdml0aTcvaW1hZ2VzL0FjdGl2aXRpLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmJwbW4ub3JnLyIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+QWN0aXZpdGk3PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjc3M9InJvdyIgc3R5bGU9Imp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtmb250LXNpemU6IDEycHg7ZGlzcGxheTogZmxleDsiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iIHN0eWxlPSJ3aWR0aDoxNTBweDsgbWluLWhlaWdodDoxNjRweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm91dGUiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjREE3MEQ2O2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjRkZCQkZGO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICBSZWRpcwogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNi3nsbvlupMvMDYxMC1SZWRpcy8xLVJlZGlzc29uL2ltYWdlcy9SZWRpc3Nvbi5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcmVkaXNzb24vcmVkaXNzb24iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlJlZGlzc29uPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDYt57G75bqTLzA2MTAtUmVkaXMvMi1SZWRpc1RlbXBsYXRlL2ltYWdlcy9SZWRpc1RlbXBsYXRlLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZG9jcy5zcHJpbmcuaW8vc3ByaW5nLWRhdGEvcmVkaXMvZG9jcy9jdXJyZW50L2FwaS9vcmcvc3ByaW5nZnJhbWV3b3JrL2RhdGEvcmVkaXMvY29yZS9SZWRpc1RlbXBsYXRlLmh0bWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlJlZGlzVGVtcGxhdGU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNi3nsbvlupMvMDYxMC1SZWRpcy8zLUplZGlzL2ltYWdlcy9KZWRpcy5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcmVkaXMvamVkaXMiIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkplZGlzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNEQTcwRDY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGRkJCRkY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOWFtuS7lgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNi3nsbvlupMvMDYxMS3lhbbku5YvMS1HdWF2YS9pbWFnZXMvR3VhdmEucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9ndWF2YSIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+R3VhdmE8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNi3nsbvlupMvMDYxMS3lhbbku5YvMi1IdXRvb2wvaW1hZ2VzL0h1dG9vbC5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2h1dG9vbC5jbi8iIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkh1dG9vbDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA2Leexu+W6ky8wNjExLeWFtuS7li8zLVRUTC9pbWFnZXMvVFRMLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9hbGliYWJhL3RyYW5zbWl0dGFibGUtdGhyZWFkLWxvY2FsIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5UVEw8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0ZGM0U5NjtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg6LCD6K+V5bel5YW3CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0ZGQUVCOTtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAgTW9jawogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNy3osIPor5UvMDcxLU1vY2svMS1Nb2NraXRvL2ltYWdlcy9Nb2NrLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9tb2NraXRvL21vY2tpdG8iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPk1vY2tpdG88L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0ZGM0U5NjtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0ZGQUVCOTtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg6LCD6K+V5bel5YW3CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA3Leiwg+ivlS8wNzIt6LCD6K+V5bel5YW3LzEtUG9zdG1hbi9pbWFnZXMvUG9zdG1hbi5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5wb3N0bWFuLmNvbS8iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlBvc3RtYW48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNy3osIPor5UvMDcyLeiwg+ivleW3peWFty8yLUFwaUZveC9pbWFnZXMvQXBpRm94LnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmFwaWZveC5jbi8iIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkFwaUZveDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA3Leiwg+ivlS8wNzIt6LCD6K+V5bel5YW3LzMtQXBpUG9zdC9pbWFnZXMvQXBpUG9zdC5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5hcGlwb3N0LmNuLyIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+QXBpUG9zdDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA3Leiwg+ivlS8wNzIt6LCD6K+V5bel5YW3LzQtRmFzdFJlcXVlc3QvaW1hZ2VzL0Zhc3RSZXF1ZXN0LnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZHJvbWFyYS5vcmcvZmFzdC1yZXF1ZXN0LyIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+RmFzdCBSZXF1ZXN0PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGRjNFOTY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGRkFFQjk7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIEFQSeeuoeeQhgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNy3osIPor5UvMDczLUFQSeeuoeeQhi8xLU9wZW5BcGkvT3BlbkFwaS5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5vcGVuYXBpcy5vcmciIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPk9wZW5BcGk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNy3osIPor5UvMDczLUFQSeeuoeeQhi8yLVN3YWdnZXIvU3dhZ2dlci5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3N3YWdnZXIuaW8vIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Td2FnZ2VyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDct6LCD6K+VLzA3My1BUEnnrqHnkIYvMy1KYXZhZG9jL0phdmFkb2MucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cub3JhY2xlLmNvbS90ZWNobmljYWwtcmVzb3VyY2VzL2FydGljbGVzL2phdmEvamF2YWRvYy10b29sLmh0bWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkphdmFkb2M8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNy3osIPor5UvMDczLUFQSeeuoeeQhi80LVlhcGkvWWFwaS5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8veWFwaS5kYXBlbmdqaWFveXUuY29tLyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+WWFwaTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA3Leiwg+ivlS8wNzMtQVBJ566h55CGLzUtVG9ybmEvVG9ybmEucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3Rvcm5hLmNuLyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+VG9ybmE8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wNy3osIPor5UvMDczLUFQSeeuoeeQhi82LXNtYXJ0LWRvYy9zbWFydC1kb2MucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3NtYXJ0LWRvYy1ncm91cC9zbWFydC1kb2MiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPnNtYXJ0LWRvYzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNzcz0icm93IiBzdHlsZT0ianVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O2ZvbnQtc2l6ZTogMTJweDtkaXNwbGF5OiBmbGV4OyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGRkY2OEY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGRkQ3MDA7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOi0qOmHj+ajgOa1iwogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wOS3otKjph4/liIbmnpAvMDkzLei0qOmHj+ajgOa1iy8xLVNvbmFyUXViZS9pbWFnZXMvU29uYXJRdWJlLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnNvbmFycXViZS5vcmcvIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Tb25hclF1YmU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0ZGRjY4RjtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0ZGRDcwMDtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg5Luj56CB6KeE6IyDCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA5Lei0qOmHj+WIhuaekC8wOTIt5Luj56CB6KeE6IyDLzEtcDNjL2ltYWdlcy9wM2MucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvcDNjIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5wM2M8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wOS3otKjph4/liIbmnpAvMDkyLeS7o+eggeinhOiMgy8xLXBtZC1pZGVhL2ltYWdlcy9wbWQtaWRlYS5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20veWJyb2VrZXIvcG1kLWlkZWEiIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPnBtZC1pZGVhPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGRkY2OEY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOi0qOmHj+WIhuaekAogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGRkQ3MDA7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOS7o+eggeWuoeafpQogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wOS3otKjph4/liIbmnpAvMDkxLeS7o+eggeWuoeafpS8xLWdpdGh1Yi9pbWFnZXMvZ2l0aHViLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS8iIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPmdpdGh1Yjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iIHN0eWxlPSJ3aWR0aDoxNTBweDsgbWluLWhlaWdodDoxNjRweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm91dGUiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjQzZFMkZGO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjQTREM0VFO2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgICAgICDmgKfog73mtYvor5UKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbnMiIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDgt5rWL6K+VLzA4Mi3mgKfog73mtYvor5UvMS1KZW1ldGVyL2ltYWdlcy9KZW1ldGVyLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vam1ldGVyLmFwYWNoZS5vcmcvIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5KZW1ldGVyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNDNkUyRkY7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOa1i+ivlQogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNBNEQzRUU7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOWNleWFg+a1i+ivlQogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wOC3mtYvor5UvMDgxLeWNleWFg+a1i+ivlS8xLUpVbml0L2ltYWdlcy9KVW5pdC5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2p1bml0Lm9yZy9qdW5pdDUvIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5KVW5pdDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA4Lea1i+ivlS8wODEt5Y2V5YWD5rWL6K+VLzItVGVzdE5HL2ltYWdlcy9UZXN0TkcucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90ZXN0bmcub3JnL2RvYy8iIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlRlc3RORzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY3NzPSJyb3ciIHN0eWxlPSJqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7Zm9udC1zaXplOiAxMnB4O2Rpc3BsYXk6IGZsZXg7Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0ZGRDcwMDtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0ZGRjY4RjtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg55uR5o6n57O757ufCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA5Lei0qOmHj+WIhuaekC8wOTQt55uR5o6n57O757ufLzEtRGFwcGVyL2ltYWdlcy9EYXBwZXIucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9iaWdidWxseS5naXRodWIuaW8vRGFwcGVyLXRyYW5zbGF0aW9uLyIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+RGFwcGVyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMDkt6LSo6YeP5YiG5p6QLzA5NC3nm5Hmjqfns7vnu58vMi1QaW5wb2ludC9pbWFnZXMvUGlucG9pbnQucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3BpbnBvaW50LWFwbS9waW5wb2ludCIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+UGlucG9pbnQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wOS3otKjph4/liIbmnpAvMDk0LeebkeaOp+ezu+e7ny8zLVByb21ldGhldXMvaW1hZ2VzL1Byb21ldGhldXMucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3Byb21ldGhldXMvcHJvbWV0aGV1cyIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+UHJvbWV0aGV1czwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzA5Lei0qOmHj+WIhuaekC8wOTQt55uR5o6n57O757ufLzQtU2t5V2Fsa2luZy9pbWFnZXMvU2t5V2Fsa2luZy5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3NreXdhbGtpbmcuYXBhY2hlLm9yZy8iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlNreVdhbGtpbmc8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8wOS3otKjph4/liIbmnpAvMDk0LeebkeaOp+ezu+e7ny81LUJlZUFQTS9pbWFnZXMvQmVlQVBNLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9oYW8xMTcvYmVlLWFwbSIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+QmVlQVBNPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMzM2NjOTk7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOWPkeW4g+mDqOe9sgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICM2NmZmOTk7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIENJL0NECiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzEwLeWPkeW4g+mDqOe9si8xMDEtQ0lDRC8xLWplbmtpbnMvaW1hZ2VzL2plbmtpbnMucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuamVua2lucy5pby8iIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPmplbmtpbnM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzMzY2M5OTtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzY2ZmY5OTtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg5Y+R5biDCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzEwLeWPkeW4g+mDqOe9si8xMDIt5Y+R5biDLzEtV2FyL2ltYWdlcy9XYXIucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNTg3MTA1My9kaWZmZXJlbmNlLWJldHdlZW4tamFyLWFuZC13YXItaW4tamF2YSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+V2FyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMTAt5Y+R5biD6YOo572yLzEwMi3lj5HluIMvMi1KYXIvaW1hZ2VzL0phci5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy81ODcxMDUzL2RpZmZlcmVuY2UtYmV0d2Vlbi1qYXItYW5kLXdhci1pbi1qYXZhIgogICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5KYXI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzMzY2M5OTtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzY2ZmY5OTtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICAgICAg5pyN5Yqh5ZmoCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICNlMTI1MWI7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzEwLeWPkeW4g+mDqOe9si8xMDMt5pyN5Yqh5ZmoLzEtTmdpbngvaW1hZ2VzL05naW54LnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm5naW54LmNvbS8iIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPk5naW54PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMTAt5Y+R5biD6YOo572yLzEwMy3mnI3liqHlmagvMi1BcGFjaGUvaW1hZ2VzL0FwYWNoZS5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5hcGFjaGUub3JnLyIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+QXBhY2hlPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogI2UxMjUxYjsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9BPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMTAt5Y+R5biD6YOo572yLzEwMy3mnI3liqHlmagvMy1Ub21jYXQvaW1hZ2VzL1RvbWNhdC5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3RvbWNhdC5hcGFjaGUub3JnLyIgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+VG9tY2F0PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMzM2NjOTk7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICM2NmZmOTk7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOWuueWZqOWMlgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEyNTFiOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0E8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8xMC3lj5HluIPpg6jnvbIvMTA0LeWuueWZqOWMli8xLURvY2tlci9pbWFnZXMvRG9ja2VyLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmRvY2tlci5jb20vIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Eb2NrZXI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8xMC3lj5HluIPpg6jnvbIvMTA0LeWuueWZqOWMli8yLUs4Uy9pbWFnZXMvSzhTLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8va3ViZXJuZXRlcy5pby96aC1jbi9kb2NzL2hvbWUvIiB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5LOFM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNzcz0icm93IiBzdHlsZT0ianVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O2ZvbnQtc2l6ZTogMTJweDtkaXNwbGF5OiBmbGV4OyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICM2NmZmOTk7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMzM2NjOTk7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdXRlIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzY2ZmY5OTtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVnb3J5IgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzMzY2M5OTtoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDozMHB4O2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjcwMHB4O3BhZGRpbmctbGVmdDoyNHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb25zIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTZweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iIHN0eWxlPSJ3aWR0aDoxNTBweDsgbWluLWhlaWdodDoxNjRweDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm91dGUiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjNjZmZjk5O2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjMzNjYzk5O2hlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NzAwcHg7cGFkZGluZy1sZWZ0OjI0cHg7Ij4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbnMiIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxNnB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICM2NmZmOTk7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMzM2NjOTk7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOS6keWOn+eUnwogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9ucyIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8xMC3lj5HluIPpg6jnvbIvMTA2LeS6keWOn+eUny8xLUlzdGlvL2ltYWdlcy9Jc3Rpby5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2lzdGlvLmlvL2xhdGVzdC96aC8iIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPklzdGlvPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiIgc3R5bGU9IndpZHRoOjE1MHB4OyBtaW4taGVpZ2h0OjE2NHB4OyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3V0ZSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICM2NmZmOTk7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICMzM2NjOTk7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDBweDtwYWRkaW5nLWxlZnQ6MjRweDsiPgogICAgICAgICAgICAgICAgICAgIOacjeWKoeWMlgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0aW9uIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO2hlaWdodDoyNHB4O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjI0cHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDoycHg7Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICNmZmY7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAyNHB4OyBoZWlnaHQ6IDI0cHg7IHBhZGRpbmctdG9wOiAxcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsgbGVmdDogMDsgdHJhbnNmb3JtOiBzY2FsZSguNik7Ij7vuI9CPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7bWFyZ2luLXJpZ2h0OiA2cHg7IgogICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2J1Z3N0YWNrLmNuL2ltYWdlcy9yb2FkbWFwLzEwLeWPkeW4g+mDqOe9si8xMDUt5pyN5Yqh5YyWLzEtUGFhUy9pbWFnZXMvUGFhUy5wbmciPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmludGVsLmNvbS9jb250ZW50L3d3dy91cy9lbi9jbG91ZC1jb21wdXRpbmcvYXMtYS1zZXJ2aWNlLmh0bWwiCiAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjpibGFjazt0ZXh0LWRlY29yYXRpb246bm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5QYWFTPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdGlvbiIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjtoZWlnaHQ6MjRweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDoyNHB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6MnB4OyI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiAjZmZmOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4OyBwYWRkaW5nLXRvcDogMXB4OyBib3JkZXItcmFkaXVzOiA1MCU7IGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IGxlZnQ6IDA7IHRyYW5zZm9ybTogc2NhbGUoLjYpOyI+77iPQjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6IDE2cHg7aGVpZ2h0OiAxNnB4O21hcmdpbi1yaWdodDogNnB4OyIKICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9idWdzdGFjay5jbi9pbWFnZXMvcm9hZG1hcC8xMC3lj5HluIPpg6jnvbIvMTA1LeacjeWKoeWMli8yLVNhYVMvaW1hZ2VzL1NhYVMucG5nIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5pbnRlbC5jb20vY29udGVudC93d3cvdXMvZW4vY2xvdWQtY29tcHV0aW5nL2FzLWEtc2VydmljZS5odG1sIgogICAgICAgICAgICAgICAgICAgICAgIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6YmxhY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+U2FhUzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3Rpb24iCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7aGVpZ2h0OjI0cHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nLWxlZnQ6MjRweDtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tdG9wOjJweDsiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmZjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDI0cHg7IGhlaWdodDogMjRweDsgcGFkZGluZy10b3A6IDFweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHNjYWxlKC42KTsiPu+4j0I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOiAxNnB4O2hlaWdodDogMTZweDttYXJnaW4tcmlnaHQ6IDZweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYnVnc3RhY2suY24vaW1hZ2VzL3JvYWRtYXAvMTAt5Y+R5biD6YOo572yLzEwNS3mnI3liqHljJYvMy1JYWFTL2ltYWdlcy9JYWFTLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuaW50ZWwuY29tL2NvbnRlbnQvd3d3L3VzL2VuL2Nsb3VkLWNvbXB1dGluZy9hcy1hLXNlcnZpY2UuaHRtbCIKICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9ImNvbG9yOmJsYWNrO3RleHQtZGVjb3JhdGlvbjpub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPklhYVM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8IS0tIOWcsOWbvuWPs+S+pyAtLT4KICAgIDxkaXYgY2xhc3M9InJvYWQtbWFwLXJpZ2h0IiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MTYwcHg7aGVpZ2h0OjYwMHB4O21hcmdpbi1sZWZ0OjkxMHB4OyI+CiAgICAgICAgPCEtLSAwMeWPs+aXi+WNoOS9jSAtLT4KICAgICAgICA8ZGl2IGNzcz0icm93IiBzdHlsZT0ianVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7Zm9udC1zaXplOiAxMnB4O2Rpc3BsYXk6IGZsZXg7bWFyZ2luLWxlZnQ6LTFweDsiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3dfcmlnaHQiIHN0eWxlPSJyaWdodDogMXB4O21hcmdpbi10b3A6LTQwcHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJpZ2h0LWNvcm5lciIgc3R5bGU9Im1hcmdpbjogMTAwcHggYXV0bzsgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6NjBweDsgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6NjBweDsgd2lkdGg6IDQwcHg7aGVpZ2h0OjE0NnB4OyBib3gtc2hhZG93OiAwIDAgMCAzMHB4ICNGRkEwN0EsIDAgMCAwIDYwcHggI0ZGN0YwMDsgY2xpcC1wYXRoOiBwb2x5Z29uKDFweCAtMTIwcHgsIDIyMHB4IDBweCwgMTYwcHggMjIwcHgsIDFweCAyMjBweCk7Ij48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLSDnqbrnmb3ljaDkvY0gLS0+CiAgICAgICAgPGRpdiBjc3M9InJvdyIgc3R5bGU9Imp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O2ZvbnQtc2l6ZTogMTJweDtkaXNwbGF5OiBmbGV4O21hcmdpbi1sZWZ0Oi0xcHg7Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTgwcHg7bWFyZ2luLWxlZnQ6MjBweDsiPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8IS0tIDAy5Y+z5peL5Y2g5L2NIC0tPgogICAgICAgIDxkaXYgY3NzPSJyb3ciIHN0eWxlPSJqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtmb250LXNpemU6IDEycHg7ZGlzcGxheTogZmxleDttYXJnaW4tbGVmdDotMXB4OyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvd19yaWdodCIgc3R5bGU9InJpZ2h0OiAxcHg7bWFyZ2luLXRvcDotMTQwcHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJpZ2h0LWNvcm5lciIgc3R5bGU9Im1hcmdpbjogMTAwcHggYXV0bzsgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6NjBweDsgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6NjBweDsgd2lkdGg6IDQwcHg7aGVpZ2h0OjEwNHB4OyBib3gtc2hhZG93OiAwIDAgMCAzMHB4ICM5OWZmOTksIDAgMCAwIDYwcHggIzAwY2M5OTsgY2xpcC1wYXRoOiBwb2x5Z29uKDFweCAtMTIwcHgsIDIyMHB4IDBweCwgMTYwcHggMjIwcHgsIDFweCAzMDBweCk7Ij48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLSDnqbrnmb3ljaDkvY0gLS0+CiAgICAgICAgPGRpdiBjc3M9InJvdyIgc3R5bGU9Imp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O2ZvbnQtc2l6ZTogMTJweDtkaXNwbGF5OiBmbGV4O21hcmdpbi1sZWZ0Oi0xcHg7Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTgwcHg7bWFyZ2luLWxlZnQ6MjBweDsiPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8IS0tIDAz5Y+z5peL5Y2g5L2NIC0tPgogICAgICAgIDxkaXYgY3NzPSJyb3ciIHN0eWxlPSJqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtmb250LXNpemU6IDEycHg7ZGlzcGxheTogZmxleDttYXJnaW4tbGVmdDotMXB4OyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvd19yaWdodCIgc3R5bGU9InJpZ2h0OiAxcHg7bWFyZ2luLXRvcDotMTQwcHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJpZ2h0LWNvcm5lciIgc3R5bGU9Im1hcmdpbjogMTAwcHggYXV0bzsgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6NjBweDsgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6NjBweDsgd2lkdGg6IDQwcHg7aGVpZ2h0OjEyMHB4OyBib3gtc2hhZG93OiAwIDAgMCAzMHB4ICMzM2ZmY2MsIDAgMCAwIDYwcHggIzAwY2NjYzsgY2xpcC1wYXRoOiBwb2x5Z29uKDFweCAtMTIwcHgsIDIyMHB4IDBweCwgMTYwcHggMjIwcHgsIDFweCAzMDBweCk7Ij48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLSDnqbrnmb3ljaDkvY0gLS0+CiAgICAgICAgPGRpdiBjc3M9InJvdyIgc3R5bGU9Imp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O2ZvbnQtc2l6ZTogMTJweDtkaXNwbGF5OiBmbGV4O21hcmdpbi1sZWZ0Oi0xcHg7Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTgwcHg7bWFyZ2luLWxlZnQ6MjBweDsiPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8IS0tIDA05Y+z5peL5Y2g5L2NIC0tPgogICAgICAgIDxkaXYgY3NzPSJyb3ciIHN0eWxlPSJqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtmb250LXNpemU6IDEycHg7ZGlzcGxheTogZmxleDttYXJnaW4tbGVmdDotMXB4OyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvd19yaWdodCIgc3R5bGU9InJpZ2h0OiAxcHg7bWFyZ2luLXRvcDotMTQwcHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJpZ2h0LWNvcm5lciIgc3R5bGU9Im1hcmdpbjogMTAwcHggYXV0bzsgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6NjBweDsgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6NjBweDsgd2lkdGg6IDQwcHg7aGVpZ2h0OjEwNHB4OyBib3gtc2hhZG93OiAwIDAgMCAzMHB4ICNGRkJCRkYsIDAgMCAwIDYwcHggI0RBNzBENjsgY2xpcC1wYXRoOiBwb2x5Z29uKDFweCAtMTIwcHgsIDIyMHB4IDBweCwgMTYwcHggMjIwcHgsIDFweCAzMDBweCk7Ij48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLSDnqbrnmb3ljaDkvY0gLS0+CiAgICAgICAgPGRpdiBjc3M9InJvdyIgc3R5bGU9Imp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O2ZvbnQtc2l6ZTogMTJweDtkaXNwbGF5OiBmbGV4O21hcmdpbi1sZWZ0Oi0xcHg7Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7bWFyZ2luLWxlZnQ6MjBweDsiPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8IS0tIDA15Y+z5peL5Y2g5L2NIC0tPgogICAgICAgIDxkaXYgY3NzPSJyb3ciIHN0eWxlPSJqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtmb250LXNpemU6IDEycHg7ZGlzcGxheTogZmxleDttYXJnaW4tbGVmdDotMXB4OyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvd19yaWdodCIgc3R5bGU9InJpZ2h0OiAxcHg7bWFyZ2luLXRvcDotMTQwcHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJpZ2h0LWNvcm5lciIgc3R5bGU9Im1hcmdpbjogMTAwcHggYXV0bzsgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6NjBweDsgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6NjBweDsgd2lkdGg6IDQwcHg7aGVpZ2h0OjE3MnB4OyBib3gtc2hhZG93OiAwIDAgMCAzMHB4ICNGRkFFQjksIDAgMCAwIDYwcHggI0ZGM0U5NjsgY2xpcC1wYXRoOiBwb2x5Z29uKDFweCAtMTIwcHgsIDIyMHB4IDBweCwgMTYwcHggMjIwcHgsIDFweCAzMDBweCk7Ij48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLSDnqbrnmb3ljaDkvY0gLS0+CiAgICAgICAgPGRpdiBjc3M9InJvdyIgc3R5bGU9Imp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O2ZvbnQtc2l6ZTogMTJweDtkaXNwbGF5OiBmbGV4O21hcmdpbi1sZWZ0Oi0xcHg7Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIiBzdHlsZT0id2lkdGg6MTUwcHg7IG1pbi1oZWlnaHQ6MTY0cHg7bWFyZ2luLWxlZnQ6MjBweDsiPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8IS0tIDA25Y+z5peL5Y2g5L2NIC0tPgogICAgICAgIDxkaXYgY3NzPSJyb3ciIHN0eWxlPSJqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtmb250LXNpemU6IDEycHg7ZGlzcGxheTogZmxleDttYXJnaW4tbGVmdDotMXB4OyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvd19yaWdodCIgc3R5bGU9InJpZ2h0OiAxcHg7bWFyZ2luLXRvcDotMTQwcHg7Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJpZ2h0LWNvcm5lciIgc3R5bGU9Im1hcmdpbjogMTAwcHggYXV0bzsgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6NjBweDsgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6NjBweDsgd2lkdGg6IDQwcHg7aGVpZ2h0OjE0NnB4OyBib3gtc2hhZG93OiAwIDAgMCAzMHB4ICM2NmZmOTksIDAgMCAwIDYwcHggIzMzY2M5OTsgY2xpcC1wYXRoOiBwb2x5Z29uKDFweCAtMTIwcHgsIDIyMHB4IDBweCwgMTYwcHggMjIwcHgsIDFweCAzMDBweCk7Ij48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9kaXY+Cg=="},null]}