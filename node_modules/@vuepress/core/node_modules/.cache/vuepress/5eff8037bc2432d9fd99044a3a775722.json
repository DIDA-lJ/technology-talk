{"remainingRequest":"/Users/onlyone/open-github/technology-talk/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/onlyone/open-github/technology-talk/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/onlyone/open-github/technology-talk/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/onlyone/open-github/technology-talk/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/onlyone/open-github/technology-talk/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/onlyone/open-github/technology-talk/docs/md/bytecode/asm-document/7.0方法.md?vue&type=template&id=ba1023dc&","dependencies":[{"path":"/Users/onlyone/open-github/technology-talk/docs/md/bytecode/asm-document/7.0方法.md","mtime":1676857804791},{"path":"/Users/onlyone/open-github/technology-talk/node_modules/cache-loader/dist/cjs.js","mtime":1676962415098},{"path":"/Users/onlyone/open-github/technology-talk/node_modules/babel-loader/lib/index.js","mtime":1676962415297},{"path":"/Users/onlyone/open-github/technology-talk/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1676962415828},{"path":"/Users/onlyone/open-github/technology-talk/node_modules/cache-loader/dist/cjs.js","mtime":1676962415098},{"path":"/Users/onlyone/open-github/technology-talk/node_modules/vue-loader/lib/index.js","mtime":1676962415466},{"path":"/Users/onlyone/open-github/technology-talk/node_modules/@vuepress/markdown-loader/index.js","mtime":1676962413901}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHsKICB2YXIgX3ZtID0gdGhpcywKICAgIF9jID0gX3ZtLl9zZWxmLl9jOwogIHJldHVybiBfYygiQ29udGVudFNsb3RzRGlzdHJpYnV0b3IiLCB7CiAgICBhdHRyczogewogICAgICAic2xvdC1rZXkiOiBfdm0uJHBhcmVudC5zbG90S2V5CiAgICB9CiAgfSwgW19jKCJwIiwgW192bS5fdigi5pys56ug6Kej6YeK5aaC5L2V55SoIEFTTSDmoJEgQVBJIOeUn+aIkOWSjOi9rOaNouaWueazleOAgummluWFiOS7i+e7jeagkSBBUEkg5pys6Lqr77yM57uZ5Ye65LiA5Lqb6K+05piO5oCn56S65L6L77yMIOeEtuWQjuivtOaYjuWmguS9leeUqOaguOW/gyBBUEkg57yW5YaZ5a6D44CC55So5LqO5rOb5Z6L5ZKM5rOo6YeK55qE5qCRIEFQSSDlnKjkuIvkuIDnq6Dku4vnu43jgIIiKV0pXSk7Cn07CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXTsKcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlOwpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Ow=="},{"version":3,"names":["render","_vm","_c","_self","attrs","$parent","slotKey","_v","staticRenderFns","_withStripped"],"sources":["/Users/onlyone/open-github/technology-talk/docs/md/bytecode/asm-document/7.0方法.md"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"ContentSlotsDistributor\",\n    { attrs: { \"slot-key\": _vm.$parent.slotKey } },\n    [\n      _c(\"p\", [\n        _vm._v(\n          \"本章解释如何用 ASM 树 API 生成和转换方法。首先介绍树 API 本身，给出一些说明性示例， 然后说明如何用核心 API 编写它。用于泛型和注释的树 API 在下一章介绍。\"\n        ),\n      ]),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":"AAAA,IAAIA,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EAC7B,IAAIC,GAAG,GAAG,IAAI;IACZC,EAAE,GAAGD,GAAG,CAACE,KAAK,CAACD,EAAE;EACnB,OAAOA,EAAE,CACP,yBAAyB,EACzB;IAAEE,KAAK,EAAE;MAAE,UAAU,EAAEH,GAAG,CAACI,OAAO,CAACC;IAAQ;EAAE,CAAC,EAC9C,CACEJ,EAAE,CAAC,GAAG,EAAE,CACND,GAAG,CAACM,EAAE,CACJ,2FAA2F,CAC5F,CACF,CAAC,CACH,CACF;AACH,CAAC;AACD,IAAIC,eAAe,GAAG,EAAE;AACxBR,MAAM,CAACS,aAAa,GAAG,IAAI;AAE3B,SAAST,MAAM,EAAEQ,eAAe"}]}