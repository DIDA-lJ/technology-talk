{"remainingRequest":"/Users/onlyone/open-github/technology-talk/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/onlyone/open-github/technology-talk/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/onlyone/open-github/technology-talk/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/onlyone/open-github/technology-talk/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/onlyone/open-github/technology-talk/docs/.vuepress/theme/components/PageSidebar.vue?vue&type=template&id=83914ca2&xmlns=http%3A%2F%2Fwww.w3.org%2F1999%2Fhtml&","dependencies":[{"path":"/Users/onlyone/open-github/technology-talk/docs/.vuepress/theme/components/PageSidebar.vue","mtime":1676857804756},{"path":"/Users/onlyone/open-github/technology-talk/node_modules/cache-loader/dist/cjs.js","mtime":1676962415098},{"path":"/Users/onlyone/open-github/technology-talk/node_modules/babel-loader/lib/index.js","mtime":1676962415297},{"path":"/Users/onlyone/open-github/technology-talk/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1676962415828},{"path":"/Users/onlyone/open-github/technology-talk/node_modules/cache-loader/dist/cjs.js","mtime":1676962415098},{"path":"/Users/onlyone/open-github/technology-talk/node_modules/vue-loader/lib/index.js","mtime":1676962415466}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}